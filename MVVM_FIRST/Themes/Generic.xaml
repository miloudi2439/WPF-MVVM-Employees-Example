<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MVVM_FIRST.CustomContent"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
   >


    <!--<Style TargetType="{x:Type local:TextSearch}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextSearch}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style TargetType="{x:Type local:TextSearch}" xmlns:sys="clr-namespace:System;assembly=mscorlib"
           BasedOn = "{StaticResource {x:Type TextBox}}">
        <Style.Resources>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Search" Foreground="LightGray" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property = "Height" Value = "30"/>
        <Setter Property = "MinWidth" Value = "150"/>

        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type local:CustomComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomComboBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid  Width="100"  Grid.Row="5" Grid.Column="1"  >

                            <ToggleButton   x:Name="PopupButton"  IsChecked="{Binding ElementName=Popup, Path=IsOpen}">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsOpen, ElementName=Popup}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>

                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Choose"/>
                                            <materialDesign:PackIcon Kind="ArrowDropDown" VerticalAlignment="Center" />
                                        </StackPanel>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <Popup x:Name="Popup" StaysOpen="False" PlacementTarget="{Binding ElementName=PopupButton}" 
                                        Placement="Bottom" >
                                <StackPanel Background="White">
                                    <TextBox Grid.Column="0" Grid.Row="0"
                             Margin="8 0 0 0"
                             materialDesign:HintAssist.Hint="Search"
                             MinWidth="400"
                             VerticalAlignment="Center" 
                             Text="{Binding  SearchText, UpdateSourceTrigger=PropertyChanged}"/>


                          <DataGrid   Name="DataGrid" HorizontalAlignment="Stretch" 
                                      HorizontalContentAlignment="Stretch" 
                                      ColumnWidth="100"  HeadersVisibility="None"
                                      Margin="0 0 0 15" ItemsSource="{Binding DataContext.Employees ,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      SelectionUnit="FullRow"
                                      IsReadOnly="True"
                                      AutoGenerateColumns="False"
                                      MaxHeight="150">

                                 <DataGrid.Columns>
                                            <DataGridTextColumn x:Name="Col"   Header="Enterprise" Binding="{Binding Path = FirstName , Mode=OneWay}"/>
                                </DataGrid.Columns>
                                </DataGrid>
                                    <Button Style="{StaticResource MaterialDesignFlatButton}"   ToolTip="MaterialDesignFlatButton">
                                        See more ..
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignFlatButton}"   ToolTip="MaterialDesignFlatButton">
                                        Create or Edit
                                    </Button>
                                </StackPanel>
                            </Popup>
                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
